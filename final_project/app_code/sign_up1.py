# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sign_up.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Sign_up(object):
    def setupUi(self, Dialog, client, main_win):
        Dialog.setObjectName("Dialog")
        Dialog.resize(376, 489)
        Dialog.setStyleSheet("background-color: rgb(54, 54, 54);")
        self.sign_up_btn = QtWidgets.QPushButton(Dialog)
        self.sign_up_btn.setGeometry(QtCore.QRect(120, 440, 101, 41))
        self.sign_up_btn.setStyleSheet("background-color: rgb(14, 154, 175);\n"
"color: rgb(255,255,255);\n"
"font-size: 18pt\n"
"")
        self.sign_up_btn.setObjectName("pushButton_2")
        self.sign_up_btn.raise_()
        self.fullname_text = QtWidgets.QLabel(Dialog)
        self.fullname_text.setGeometry(QtCore.QRect(40, 80, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.fullname_text.setFont(font)
        self.fullname_text.setStyleSheet("color: rgb(255,255,255);\n"
"font-size: 12pt")
        self.fullname_text.setObjectName("label_4")
        self.lineEdit_full_name = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_full_name.setGeometry(QtCore.QRect(40, 100, 281, 31))
        self.lineEdit_full_name.setAutoFillBackground(False)
        self.lineEdit_full_name.setStyleSheet("background-color: rgb(197,197,197);\n"
"color: rgb(42, 42, 42);\n"
"font-size: 12pt\n"
"")
        self.lineEdit_full_name.setText("")
        self.lineEdit_full_name.setPlaceholderText("")
        self.lineEdit_full_name.setObjectName("lineEdit_4")
        self.heading_text = QtWidgets.QLabel(Dialog)
        self.heading_text.setGeometry(QtCore.QRect(30, 10, 261, 71))
        self.heading_text.setStyleSheet("background-color: rgb(54,54,54);\n"
"color: rgb(255, 255, 255);\n"
"font: 75 28pt \"MS Shell Dlg 2\";")
        self.heading_text.setObjectName("label_3")
        self.lineEdit_username = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_username.setGeometry(QtCore.QRect(40, 160, 281, 31))
        self.lineEdit_username.setAutoFillBackground(False)
        self.lineEdit_username.setStyleSheet("background-color: rgb(197,197,197);\n"
"color: rgb(42, 42, 42);\n"
"font-size: 12pt\n"
"")
        self.lineEdit_username.setInputMethodHints(QtCore.Qt.ImhSensitiveData)
        self.lineEdit_username.setText("")
        self.lineEdit_username.setPlaceholderText("")
        self.lineEdit_username.setObjectName("lineEdit_3")
        self.username_text = QtWidgets.QLabel(Dialog)
        self.username_text.setGeometry(QtCore.QRect(40, 140, 111, 21))
        self.username_text.setStyleSheet("color: rgb(255,255,255);\n"
"font-size: 12pt")
        self.username_text.setObjectName("label_5")
        self.password_text = QtWidgets.QLabel(Dialog)
        self.password_text.setGeometry(QtCore.QRect(40, 260, 111, 21))
        self.password_text.setStyleSheet("color: rgb(255,255,255);\n"
"font-size: 12pt")
        self.password_text.setObjectName("label_7")
        self.confirm_password_text = QtWidgets.QLabel(Dialog)
        self.confirm_password_text.setGeometry(QtCore.QRect(40, 320, 181, 21))
        self.confirm_password_text.setStyleSheet("color: rgb(255,255,255);\n"
"font-size: 12pt")
        self.confirm_password_text.setObjectName("label_8")
        self.lineEdit_email = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_email.setGeometry(QtCore.QRect(40, 220, 281, 31))
        self.lineEdit_email.setAutoFillBackground(False)
        self.lineEdit_email.setStyleSheet("background-color: rgb(197,197,197);\n"
"color: rgb(42, 42, 42);\n"
"font-size: 12pt")
        self.lineEdit_email.setInputMethodHints(QtCore.Qt.ImhSensitiveData)
        self.lineEdit_email.setText("")
        self.lineEdit_email.setPlaceholderText("")
        self.lineEdit_email.setObjectName("lineEdit_5")
        self.email_text = QtWidgets.QLabel(Dialog)
        self.email_text.setGeometry(QtCore.QRect(40, 200, 111, 21))
        self.email_text.setStyleSheet("color: rgb(255,255,255);\n"
"font-size: 12pt")
        self.email_text.setObjectName("label_9")
        self.lineEdit_password = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_password.setGeometry(QtCore.QRect(40, 280, 281, 31))
        self.lineEdit_password.setAutoFillBackground(False)
        self.lineEdit_password.setStyleSheet("background-color: rgb(197,197,197);\n"
"color: rgb(42, 42, 42);\n"
"font-size: 12pt")
        self.lineEdit_password.setInputMethodHints(QtCore.Qt.ImhHiddenText | QtCore.Qt.ImhNoAutoUppercase | QtCore.Qt.ImhNoPredictiveText | QtCore.Qt.ImhSensitiveData)
        self.lineEdit_password.setInputMask("")
        self.lineEdit_password.setText("")
        self.lineEdit_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_password.setPlaceholderText("")
        self.lineEdit_password.setObjectName("lineEdit_6")
        self.lineEdit_confirm_password = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_confirm_password.setGeometry(QtCore.QRect(40, 340, 281, 31))
        self.lineEdit_confirm_password.setAutoFillBackground(False)
        self.lineEdit_confirm_password.setStyleSheet("background-color: rgb(197,197,197);\n"
"color: rgb(42, 42, 42);\n"
"font-size: 12pt")
        self.lineEdit_confirm_password.setInputMethodHints(QtCore.Qt.ImhHiddenText | QtCore.Qt.ImhNoAutoUppercase | QtCore.Qt.ImhNoPredictiveText | QtCore.Qt.ImhSensitiveData)
        self.lineEdit_confirm_password.setInputMask("")
        self.lineEdit_confirm_password.setText("")
        self.lineEdit_confirm_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_confirm_password.setPlaceholderText("")
        self.lineEdit_confirm_password.setObjectName("lineEdit_7")
        self.fill_fields_text = QtWidgets.QLabel(Dialog)
        self.fill_fields_text.setGeometry(QtCore.QRect(40, 380, 221, 21))
        self.fill_fields_text.setStyleSheet("background-color: rgb(54,54,54);\n"
"color: rgb(255, 255, 255);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.fill_fields_text.setObjectName("label_11")
        self.not_same_passwords_text = QtWidgets.QLabel(Dialog)
        self.not_same_passwords_text.setGeometry(QtCore.QRect(40, 380, 251, 21))
        self.not_same_passwords_text.setStyleSheet("background-color: rgb(54,54,54);\n"
"color: rgb(255, 255, 255);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.not_same_passwords_text.setObjectName("label_12")
        self.user_exists_text = QtWidgets.QLabel(Dialog)
        self.user_exists_text.setGeometry(QtCore.QRect(40, 380, 251, 21))
        self.user_exists_text.setStyleSheet("background-color: rgb(54,54,54);\n"
"color: rgb(255, 255, 255);\n"
"font: 75 10pt \"MS Shell Dlg 2\";")
        self.invalid_email_text = QtWidgets.QLabel(Dialog)
        self.invalid_email_text.setObjectName("label_14")
        self.invalid_email_text.setGeometry(QtCore.QRect(40, 380, 251, 21))
        self.invalid_email_text.setStyleSheet("background-color: rgb(54,54,54);\n"
                                    "color: rgb(255, 255, 255);\n"
                                    "font: 75 10pt \"MS Shell Dlg 2\";")
        self.invalid_password_text = QtWidgets.QTextEdit(Dialog)
        self.invalid_password_text.setEnabled(False)
        self.invalid_password_text.setGeometry(QtCore.QRect(30, 380, 351, 61))
        self.invalid_password_text.setStyleSheet("color: rgb(255,255,255);\n"
                                    "font-size: 10pt")
        self.invalid_password_text.setObjectName("textEdit")
        self.invalid_password_text.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.fill_fields_text.hide()
        self.not_same_passwords_text.hide()
        self.user_exists_text.hide()
        self.invalid_email_text.hide()
        self.invalid_password_text.hide()
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        self.sign_up_btn.clicked.connect(lambda: self.try_sign_up(Dialog, client, main_win))

    # A function that receives Dialog, client, main_win. The function gets the fields from the lines, does a validation, and send the details of the user to the server to check if the username already exists. If not the server would add the user to the database The function would raise error labels when necessary
    def try_sign_up(self, Dialog, client, main_win):
        self.invalid_password_text.hide()
        full_name = self.lineEdit_full_name.text()
        email = self.lineEdit_email.text()
        username = self.lineEdit_username.text()
        password = self.lineEdit_password.text()
        confirm_pass = self.lineEdit_confirm_password.text()
        if full_name == '' or email == '' or username == '' or password == '' or confirm_pass == '':
            self.fill_fields_text.show()
            self.fill_fields_text.raise_()
            return
        if password != confirm_pass:
            self.not_same_passwords_text.show()
            self.not_same_passwords_text.raise_()
            return
        if not self.strong_password_checker(password):
            self.invalid_password_text.show()
            self.invalid_password_text.raise_()
            return
        if not client.check_email(email):
            self.invalid_email_text.show()
            self.invalid_email_text.raise_()
            return
        res = client.sign_up(full_name, email, username, password)
        if res != None:
            main_win.turn_into_logged_in_mode(username, res)
            main_win.fill_table(client)
            Dialog.close()
        else:
            self.user_exists_text.show()
            self.user_exists_text.raise_()

    #The fuction receives a password and checks if it's strong enough. Retrurns True of False
    def strong_password_checker(self, password):
        if len(password) < 6:
            return False
        if not any('a' <= c <= 'z' for c in password):
            return False
        if not any('A' <= c <= 'Z' for c in password):
            return False
        if not any(c.isdigit() for c in password):
            return False
        return True
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Sign_up", "Sign_up"))
        self.sign_up_btn.setText(_translate("Dialog", "Sign up"))
        self.fullname_text.setText(_translate("Dialog", "First and last name:"))
        self.heading_text.setText(_translate("Dialog", "Personal details"))
        self.username_text.setText(_translate("Dialog", "Username:"))
        self.password_text.setText(_translate("Dialog", "Password:"))
        self.confirm_password_text.setText(_translate("Dialog", "Confirm password:"))
        self.email_text.setText(_translate("Dialog", "e-mail:"))
        self.fill_fields_text.setText(_translate("Dialog", "please fill all the fields!"))
        self.not_same_passwords_text.setText(_translate("Dialog", "make sure you wrote the same password!"))
        self.user_exists_text.setText(_translate("Dialog", "username already exists!"))
        self.invalid_email_text.setText(_translate("Dialog", "please enter a valid email!"))
        self.invalid_password_text.setText(_translate("Dialog", "not a valid password. enter a password that at least 6 characters long with a combination of uppercase letters, lowercase letters, numbers"))


